import { render } from '@react-email/render';
import * as React from 'react';
import * as EmailComponents from '../../emails/components';

export interface ComponentTree {
  subject: string;
  previewText: string;
  components: Array<{
    type: string;
    props: any;
  }>;
}

/**
 * Render email from component tree generated by LLM agents
 * Maps component type strings to React Email components
 */
export async function renderEmailFromTree(tree: ComponentTree): Promise<string> {
  const {
    EmailShell,
    EmailContainer,
    EmailHeader,
    EmailFooter,
    EmailSection,
    ValidationBlock,
    ScoreCard,
    PressureZoneCard,
    InterventionCard,
    TipCallout,
    ResourceList,
    CTAButton,
  } = EmailComponents;

  // Component type map
  const componentMap: Record<string, any> = {
    EmailSection,
    ValidationBlock,
    ScoreCard,
    PressureZoneCard,
    InterventionCard,
    TipCallout,
    ResourceList,
    CTAButton,
  };

  // Map component tree to React elements
  const contentElements = tree.components.map((comp, idx) => {
    const Component = componentMap[comp.type];
    if (!Component) {
      console.warn(`Unknown component type: ${comp.type}, skipping`);
      return null;
    }
    return React.createElement(Component, { key: idx, ...comp.props });
  }).filter(Boolean);

  // Wrap in email shell
  const email = React.createElement(
    EmailShell,
    { previewText: tree.previewText },
    React.createElement(
      EmailContainer,
      {},
      React.createElement(EmailHeader, {}),
      ...contentElements,
      React.createElement(EmailFooter, {})
    )
  );

  // Render to HTML
  return await render(email);
}
